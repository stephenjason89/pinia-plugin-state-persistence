import{_ as s,b as t,a9 as e,o as a}from"./chunks/framework.Bvd2_HY-.js";const g=JSON.parse('{"title":"Features","description":"","frontmatter":{},"headers":[],"relativePath":"guide/features.md","filePath":"guide/features.md","lastUpdated":1758915726000}'),n={name:"guide/features.md"};function l(h,i,r,o,d,k){return a(),t("div",null,i[0]||(i[0]=[e(`<h1 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h1><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li><p><strong>Universal Storage Support</strong>: Compatible with a wide range of storage mechanisms:</p><ul><li><strong>Synchronous Storage</strong>: <ul><li><code>localStorage</code></li><li><code>sessionStorage</code></li><li><code>cookies</code></li></ul></li><li><strong>Asynchronous Storage</strong>: <ul><li><code>indexedDB</code> (via libraries like <code>localForage</code>)</li><li><code>cloud-based storage solutions</code> (via custom implementations)</li></ul></li><li><strong>Custom Storage</strong>: Easily extend the plugin to work with any storage mechanism by implementing a <code>getItem</code>, <code>setItem</code>, and <code>removeItem</code> interface.</li></ul></li><li><p><strong>Customizable Persistence</strong>:</p><ul><li>Define custom key names for saved states.</li><li>Filter mutations to decide which should trigger persistence.</li><li>Use custom serialization/deserialization methods to fit your data handling needs.</li></ul></li><li><p><strong>Debugging Support</strong>: Includes a built-in logger to track plugin operations and debug state persistence behavior.</p></li><li><p><strong>State Overwriting</strong>: Optionally overwrite the store state during initialization with persisted data, providing a seamless experience for users returning to the app.</p></li><li><p><strong>SSR Compatibility</strong>: Fully functional in server-side rendering environments, ensuring your app works seamlessly across client and server.</p></li></ul><h2 id="why-choose-this-plugin" tabindex="-1">Why Choose This Plugin? <a class="header-anchor" href="#why-choose-this-plugin" aria-label="Permalink to &quot;Why Choose This Plugin?&quot;">​</a></h2><ul><li><strong>Zero Dependencies</strong>: Lightweight and relies solely on Pinia, with no external dependencies.</li><li><strong>Compact Size</strong>: Minified and gzipped size of only <strong>1 kB</strong>.</li><li><strong>Queueing Mechanism</strong>: Eliminates race condition issues when working with asynchronous storages.</li><li><strong>Async Storage Support</strong>: Includes <code>$onRestore()</code> method to easily wait for asynchronous storage restoration.</li><li><strong>Enhanced Flexibility</strong>: Offers advanced configuration options for fine-tuning persistence behavior.</li><li><strong>Developer-Centric</strong>: Designed with real-world scenarios and use cases in mind.</li></ul><hr><h3 id="supported-storage-types" tabindex="-1">Supported Storage Types <a class="header-anchor" href="#supported-storage-types" aria-label="Permalink to &quot;Supported Storage Types&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Storage Type</th><th>Synchronous</th><th>Asynchronous</th><th>Customizable</th></tr></thead><tbody><tr><td><code>localStorage</code></td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td><code>sessionStorage</code></td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td>Cookies</td><td>✅</td><td>❌</td><td>✅</td></tr><tr><td><code>indexedDB</code></td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td><code>localForage</code></td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>Cloud-based storages</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>Custom storage</td><td>✅/❌</td><td>✅/❌</td><td>✅</td></tr></tbody></table><details><summary>To add custom storage (Click to expand)</summary><p>Implement the following interface to use custom storage:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes dracula github-light vp-code" style="--shiki-dark:#F8F8F2;--shiki-light:#24292e;--shiki-dark-bg:#282A36;--shiki-light-bg:#fff;" tabindex="0"><code><span class="line"><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">interface</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#6F42C1;--shiki-light-font-style:inherit;"> Storage</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#50FA7B;--shiki-light:#6F42C1;">  getItem</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#E36209;--shiki-light-font-style:inherit;">key</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#6F42C1;--shiki-light-font-style:inherit;"> Promise</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;">string</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> null</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">|</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> null</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#50FA7B;--shiki-light:#6F42C1;">  setItem</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#E36209;--shiki-light-font-style:inherit;">key</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#E36209;--shiki-light-font-style:inherit;">value</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> void</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#6F42C1;--shiki-light-font-style:inherit;"> Promise</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;">void</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">&gt;;</span></span>
<span class="line"><span style="--shiki-dark:#50FA7B;--shiki-light:#6F42C1;">  removeItem</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#FFB86C;--shiki-dark-font-style:italic;--shiki-light:#E36209;--shiki-light-font-style:inherit;">key</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> string</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;"> void</span><span style="--shiki-dark:#FF79C6;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#6F42C1;--shiki-light-font-style:inherit;"> Promise</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#8BE9FD;--shiki-dark-font-style:italic;--shiki-light:#005CC5;--shiki-light-font-style:inherit;">void</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">&gt;;</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#24292E;">}</span></span></code></pre></div></details>`,9)]))}const y=s(n,[["render",l]]);export{g as __pageData,y as default};
